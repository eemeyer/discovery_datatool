<config
  xmlns="http://transparensee.com/schema/datatool-config-4"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation=
    "http://transparensee.com/schema/datatool-config-4
     http://transparensee.com/schema/datatool-config-4.xsd">
  <dataSources>
    <dataSource name="mysqlTest"
      jar="stage/mysql-connector-java-5.1.10-bin.jar"
      class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource">
      <url>jdbc:mysql://localhost/test</url>
      <user>test<span>hello</span></user>
      <password>test</password>
    </dataSource>
  </dataSources>

  <profiles>
    <sqlProfile name="sqlProfile" dataSource="mysqlTest">
      <!-- createSql is optional. By including it we enable automatic profile creation. -->
      <createSql>
        insert into changeset_profile (name) values (:name)
      </createSql>
      <retrieveSql startColumn="start" endColumn="end">
        select last_run as start, CURRENT_TIMESTAMP as end
        from changeset_profile
        where name = :name
      </retrieveSql>
      <updateSql>
        update changeset_profile
        set last_run = :lastRun
        where name = :name
      </updateSql>
    </sqlProfile>
  </profiles>

  <publishers>
    <sqlPublisher name="test" dataSource="mysqlTest" profile="sqlProfile">
      <action type="create" filter="delta"
              idColumn="id" jsonColumnNames="jsonColumn">
        <query><![CDATA[
          select * from Content
          where last_updated >= :start and last_updated < :end
        ]]></query>
        <!-- type="delimited" must only return a single column, or the pull will fail with an exception -->
        <subquery property="categories" type="delimited" delimiter=","><![CDATA[
          select name from content_category inner join Content on content_category._content_id=:id
        ]]></subquery>
        <subquery property="categories_array" type="array"><![CDATA[
          select name from content_category inner join Content on content_category._content_id=:id
        ]]></subquery>
      </action>
      <action type="create" filter="snapshot"
              idColumn="id" jsonColumnNames="data">
        <query>select * from Content</query>
      </action>
    </sqlPublisher>
  </publishers>
</config>
