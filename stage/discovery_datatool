#!/bin/sh -e
#
# /etc/init.d/discovery_datatool -- startup script for Discovery Data Tool
#
### BEGIN INIT INFO
# Provides:          discovery_datatool
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Discovery Data Tool
# Description:       Start Discovery Data Tool HTTP server.
### END INIT INFO

# Configuration files
#
# /etc/default/discovery_datatool
#   If it exists, this is read at the start of script. It may perform any 
#   sequence of shell commands, like setting relevant environment variables.
#
# /etc/discovery_datatool/discovery_datatool.xml
#   Default configuration file used by the Discovery Data Tool, if
#   DISCOVERY_DATATOOL_CONFIG_FILE is not set.
#   
# Configuration variables (to define in /etc/default/discovery_datatool)
#
# JAVA_HOME  
#   Home of Java installation. 
#
# JAVA_OPTIONS
#   Extra options to pass to the JVM
#
# DISCOVERY_DATATOOL_HTTP_PORT
#   Override the default port for the Discovery Data Tool. If not set then 8089
#   will be used.
#
# DISCOVERY_DATATOOL_BIND_ADDRESS
#   The interface address on which the Discovery Data Tool should listen.
#
# DISCOVERY_DATATOOL_HTTPS_PORT
#  The port on which the Discovery Data Tool should listen for HTTPS requests.
#  Must be set to enable HTTPS.
#
# DISCOVERY_DATATOOL_KEYSTORE_FILE
#  Path the a Java Key Store file containing the server certificate and private key.
#  Required if you want to use HTTPS.
#
# DISCOVERY_DATATOOL_KEYSTORE_PASS
#  Password for the Java Key Store file containing the server certificate and private key.
#  Required if you want to use HTTPS.
#
# DISCOVERY_DATATOOL_KEY_PASS
#  Password for the server private key.
#  Required if your key has a password.
#
# DISCOVERY_DATATOOL_TRUSTSTORE_FILE
#  Optional Java Key Store file containing trusted client certificates.
#
# DISCOVERY_DATATOOL_TRUSTSTORE_PASS
#  Password for the trust store. Required if using client certificates.
#
# DISCOVERY_DATATOOL_CONFIG_FILE
#   Full path to the XML configuration file, defaults to
#   /etc/discovery_datatool/discovery_datatool.xml, if not set.
#
# DISCOVERY_DATATOOL_DIR
#   Optional full path to the working directory for the Discovery Data Tool.
#   Defaults to the parent directory of the config file if not set.
#
# DISCOVERY_DATATOOL_USER
#   if set, then used as a username to run the Discovery Data Tool as

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=discovery_datatool
DESC="Discovery Data Tool"
LOGDIR="/var/log/discovery_datatool"
DEFAULT=/etc/default/$NAME
DAEMON=/usr/bin/jsvc

if [ `id -u` -ne 0 ]; then
  echo "You need root privileges to run this script"
  exit 1
fi

# Make sure daemon is started with system locale
if [ -r /etc/default/locale ]; then
  . /etc/default/locale
  export LANG
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
  . /etc/default/rcS
fi


# The following variables can be overwritten in /etc/default/discovery_datatool

# Whether to start daemon or not
NO_START=0

# Location of the config file
DISCOVERY_DATATOOL_CONFIG_FILE=/etc/discovery_datatool/discovery_datatool.xml

# Working directory for the daemon (default: parent directory of the config file)
DISCOVERY_DATATOOL_DIR=

# Run daemon as this user ID (default: discovery_datatool)
DISCOVERY_DATATOOL_USER=discovery-datatool

# HTTP port the daemon should bind do, defaults to 8089
DISCOVERY_DATATOOL_HTTP_PORT=8089

# Extra options to pass to the JVM
JAVA_OPTIONS="-Xmx128m -Djava.awt.headless=true"

# The first existing directory is used for JAVA_HOME (if JAVA_HOME is not
# defined in /etc/default/discovery_datatool).
# Should contain a list of space separated directories.
JDK_DIRS="
  /usr/lib/jvm/default-java \
  /usr/lib/jvm/java-6-sun \
  /usr/lib/j2sdk1.6-sun \
  "

# End of variables that can be overwritten in /etc/default/discovery_datatool

# overwrite settings from default file
if [ -f "$DEFAULT" ]; then
  . "$DEFAULT"
fi

# automatically set the working directory if not otherwise configured
if [ -z "$DISCOVERY_DATATOOL_DIR" ]; then
  DISCOVERY_DATATOOL_DIR=$(dirname "$DISCOVERY_DATATOOL_CONFIG_FILE")
fi

if [ ! -f "$DAEMON" ]; then
  log_failure_msg "Daemon wrapper $DAEMON is not installed"
  exit 1
fi

# Check whether startup has been disabled
if [ "$NO_START" != "0" -a "$1" != "stop" ]; then 
  [ "$VERBOSE" != "no" ] && log_failure_msg "Not starting $DESC - edit /etc/default/disovery_datatool and change NO_START to be 0 (or comment it out)."
  exit 0
fi

if [ -z "$DISCOVERY_DATATOOL_USER" ]; then
  log_failure_msg "Not starting/stopping $DESC as configured"
  log_failure_msg "(DISCOVERY_DATATOOL_USER is empty in /etc/default/disovery_datatool)."
  exit 1
fi

# Build command line arguments
if [ -n "$DISCOVERY_DATATOOL_BIND_ADDRESS" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --bind-address $DISCOVERY_DATATOOL_BIND_ADDRESS"
fi
if [ -n "$DISCOVERY_DATATOOL_HTTP_PORT" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --port $DISCOVERY_DATATOOL_HTTP_PORT"
fi
if [ -n "$DISCOVERY_DATATOOL_HTTPS_PORT" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --https-port $DISCOVERY_DATATOOL_HTTPS_PORT"
fi
if [ -n "$DISCOVERY_DATATOOL_KEYSTORE_FILE" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --keystore-file $DISCOVERY_DATATOOL_KEYSTORE_FILE"
fi
if [ -n "$DISCOVERY_DATATOOL_KEYSTORE_PASS" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --keystore-pass $DISCOVERY_DATATOOL_KEYSTORE_PASS"
fi
if [ -n "$DISCOVERY_DATATOOL_KEY_PASS" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --key-pass $DISCOVERY_DATATOOL_KEY_PASS"
fi
if [ -n "$DISCOVERY_DATATOOL_TRUSTSTORE_FILE" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --truststore-file $DISCOVERY_DATATOOL_TRUSTSTORE_FILE"
fi
if [ -n "$DISCOVERY_DATATOOL_TRUSTSTORE_PASS" ]; then
  DISCOVERY_DATATOOL_ARGS="$DISCOVERY_DATATOOL_ARGS --truststore-pass $DISCOVERY_DATATOOL_TRUSTSTORE_PASS"
fi

# Look for the right JVM to use
if [ -z "$JAVA_HOME" ]; then
  for jdir in $JDK_DIRS; do
    if [ -d "$jdir" -a -z "${JAVA_HOME}" ]; then
      JAVA_HOME="$jdir"
    fi
  done
fi
export JAVA_HOME

# Define other required variables
PIDFILE="/var/run/$NAME.pid"
BOOTSTRAP_CLASS=com.t11e.discovery.datatool.WebServerDaemon
JSVC_CLASSPATH="/usr/share/discovery_datatool/discovery_datatool_standalone.jar"

if [ ! -f "$JSVC_CLASSPATH" ]; then
  log_failure_msg "Not starting/stopping $DESC as configured"
  log_failure_msg "($JSVC_CLASSPATH does not exist)"
  exit 1
fi


if [ -z "$DISCOVERY_DATATOOL_LOGGING_PROPERTIES" ]; then
 DISCOVERY_DATATOOL_LOGGING_PROPERTIES="$DISCOVERY_DATATOOL_DIR/logging.properties"
fi
if [ -f "$DISCOVERY_DATATOOL_LOGGING_PROPERTIES" ]; then
  JAVA_OPTIONS="$JAVA_OPTIONS -Djava.util.logging.config.file=$DISCOVERY_DATATOOL_LOGGING_PROPERTIES"
fi

##################################################
# Check for JAVA_HOME
##################################################
if [ -z "$JAVA_HOME" ]; then
  log_failure_msg "Could not start $DESC because no Java Runtime"
  log_failure_msg "(JRE) was found. Please download and install JRE 1.6 or higher and set"
  log_failure_msg "JAVA_HOME in /etc/default/discovery_datatool the JRE's installation directory."
  exit 1
fi

##################################################
# Do the action
##################################################
case "$1" in
  start)
    if [ ! -f "$DISCOVERY_DATATOOL_CONFIG_FILE" ]; then
      log_failure_msg "Not starting/stopping $DESC as configured"
      log_failure_msg "($DISCOVERY_DATATOOL_CONFIG_FILE does not exist)"
      exit 1
    fi
    
    if [ ! -d "$LOGDIR" ]; then
      log_failure_msg "Not starting/stopping $DESC as configured"
      log_failure_msg "($LOGDIR does not exist)"
      exit 1
    fi
    if [ -d "$DISCOVERY_DATATOOL_DIR" ]; then
      cd "$DISCOVERY_DATATOOL_DIR"
    fi

    log_daemon_msg "Starting $DESC." "$NAME"
    ORIG_PID=""
    if [ -f "$PIDFILE" ]; then
      ORIG_PID=$(cat "$PIDFILE")
    fi
    if $DAEMON -user "$DISCOVERY_DATATOOL_USER" -cp "$JSVC_CLASSPATH" \
        -outfile $LOGDIR/out.log -errfile $LOGDIR/out.log \
        -pidfile "$PIDFILE" $JAVA_OPTIONS $BOOTSTRAP_CLASS \
        $DISCOVERY_DATATOOL_ARGS; then
      NEW_PID=$(cat "$PIDFILE")
      if [ "$NEW_PID" == "$ORIG_PID" ]; then
        log_warning_msg "(already running)."
        log_end_msg 0
        exit 1
      else
        log_daemon_msg "$DESC started, reachable on $DISCOVERY_DATATOOL_BIND_ADDRESS $DISCOVERY_DATATOOL_HTTP_PORT $DISCOVERY_DATATOOL_HTTPS_PORT." "$NAME"
        log_end_msg 0
      fi
    else
      log_warning_msg "failed"
      log_end_msg 1
    fi
  ;;

  stop)
    log_daemon_msg "Stopping $DESC (was reachable on  $DISCOVERY_DATATOOL_BIND_ADDRESS $DISCOVERY_DATATOOL_HTTP_PORT $DISCOVERY_DATATOOL_HTTPS_PORT)." "$NAME"
    if $DAEMON -stop -user "$DISCOVERY_DATATOOL_USER" -cp "$JSVC_CLASSPATH" \
        -outfile $LOGDIR/out.log -errfile $LOGDIR/out.log \
        -pidfile "$PIDFILE" $JAVA_OPTIONS $BOOTSTRAP_CLASS; then
      log_progress_msg "."
      rm -f "$PIDFILE"
      log_daemon_msg "$DESC stopped." "$NAME"
      log_end_msg 0
    else
      if [ -x "$PIDFILE" ]; then
        log_warning_msg "(not running but $PIDFILE exists)."
      else
        log_warning_msg "(not running)."
      fi
    fi
  ;;

  check)
    log_success_msg "Checking arguments for Discovery Data Tool: "
    log_success_msg ""
    log_success_msg "PIDFILE =  $PIDFILE"
    log_success_msg "JAVA_OPTIONS =  $JAVA_OPTIONS"
    log_success_msg "DISCOVERY_DATATOOL_USER =  $DISCOVERY_DATATOOL_USER"
    log_success_msg "DISCOVERY_DATATOOL_ADDRESS =  $DISCOVERY_DATATOOL_ADDRESS"
    log_success_msg "DISCOVERY_DATATOOL_DIR =  $DISCOVERY_DATATOOL_DIR"
    log_success_msg "DISCOVERY_DATATOOL_CONFIG_FILE =  $DISCOVERY_DATATOOL_CONFIG_FILE"
    log_success_msg "DISCOVERY_DATATOOL_LOGGING_PROPERTIES =  $DISCOVERY_DATATOOL_LOGGING_PROPERTIES"
    if [ -f $PIDFILE ]
    then
      log_success_msg "$DESC is running with pid `cat $PIDFILE`, and is reachable on $DISCOVERY_DATATOOL_ADDRESS"
      exit 0
    fi
    exit 1
  ;;

  *)
    log_success_msg "Usage: $0 {start|stop|check}"
    exit 1
  ;;
esac

exit 0
